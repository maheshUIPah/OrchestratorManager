<Activity mc:Ignorable="sap sap2010" x:Class="MakeAuthenticationRequest_OnPremises" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, ui:GenericValue))" />
    <x:Property Name="in_Username" Type="InArgument(x:String)" />
    <x:Property Name="in_Password" Type="InArgument(x:String)" />
    <x:Property Name="in_OrchestratorURL" Type="InArgument(x:String)" />
    <x:Property Name="out_ShouldStop" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_UseOAuthFlow" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_AccountName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>786,3209.3333333333335</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Authenticate_OnPremises_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="74">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Authenticate to Automation Suite Orchestrator instance and store authentication token in Config." DisplayName="Make Authentication Request Automation Suite Orchestrator" sap:VirtualizedContainerService.HintSize="696,3144.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Update Configuration File" sap:VirtualizedContainerService.HintSize="634,1965.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_11">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="ASOrchestratorURL" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign AS OrchestratorURL" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[ASOrchestratorURL]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[(New Uri(in_OrchestratorURL)).GetLeftPart(UriPartial.Authority)]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[ASOrchestratorURL &lt;&gt; io_Config(&quot;AutomationSuiteURL&quot;)]" DisplayName="If Orchestrator URL Is Specified" sap:VirtualizedContainerService.HintSize="510,299.3333333333333" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateConfigurationFile Workflow" sap:VirtualizedContainerService.HintSize="334,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Common/UpdateConfigurationFile.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFilePath">[io_Config("ConfigFilePath")]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_SheetName">Settings</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ParameterName">AutomationSuiteURL</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ParameterValue">[ASOrchestratorURL]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[io_Config]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <If Condition="[Not String.IsNullOrWhiteSpace(in_AccountName) AndAlso in_AccountName &lt;&gt; io_Config(&quot;AutomationSuiteAccountName&quot;)]" DisplayName="If Account Name Is Specified" sap:VirtualizedContainerService.HintSize="510,380.6666666666667" sap2010:WorkflowViewState.IdRef="If_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateConfigurationFile Workflow" sap:VirtualizedContainerService.HintSize="334,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Common/UpdateConfigurationFile.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFilePath">[io_Config("ConfigFilePath")]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_SheetName">Settings</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ParameterName">AutomationSuiteAccountName</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ParameterValue">[in_AccountName]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[io_Config]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateConfigurationFile Workflow" sap:VirtualizedContainerService.HintSize="510,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Common/UpdateConfigurationFile.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFilePath">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="io_Config(&quot;ConfigFilePath&quot;)" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_SheetName">
            <Literal x:TypeArguments="x:String">Settings</Literal>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ParameterName">
            <Literal x:TypeArguments="x:String">AutomationSuiteTenantName</Literal>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ParameterValue">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="io_Config(&quot;AutomationSuitetenantname&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">
            <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" ExpressionText="io_Config" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Assign DisplayName="Assign Account Name" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="ui:GenericValue">[io_Config("AutomationSuiteAccountName")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="ui:GenericValue">[in_AccountName]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Orchestrator URL" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="ui:GenericValue">[io_Config("OrchestratorURL")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="ui:GenericValue">[ASOrchestratorURL]</InArgument>
        </Assign.Value>
      </Assign>
      <If sap2010:Annotation.AnnotationText="Changehere" Condition="[in_UseOAuthFlow]" DisplayName="If Use OAuth Flow" sap:VirtualizedContainerService.HintSize="510,563.3333333333334" sap2010:WorkflowViewState.IdRef="If_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Assign sap2010:Annotation.AnnotationText="Format Automation Cloud Orchestrator URL to be used in subsequent requests." DisplayName="Assign Automation Suite Orchestrator URL" sap:VirtualizedContainerService.HintSize="434,130.66666666666666" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="ui:GenericValue">[io_Config("OrchestratorURL")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="ui:GenericValue">[ASOrchestratorURL.TrimEnd("/".ToCharArray)]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Basic Authentication" sap:VirtualizedContainerService.HintSize="476,218" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap2010:Annotation.AnnotationText="Format Automation Suite Orchestrator URL to be used in subsequent requests." DisplayName="Assign Automation Suite Orchestrator URL" sap:VirtualizedContainerService.HintSize="434,130.66666666666666" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="ui:GenericValue">[io_Config("OrchestratorURL")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="ui:GenericValue">[New GenericValue(String.Format("{0}/{1}/{2}", ASOrchestratorURL.TrimEnd("/".ToCharArray), io_Config("AutomationSuiteAccountName"), io_Config("AutomationSuitetenantname")))]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Get API Token" sap:VirtualizedContainerService.HintSize="634,827.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="StatusCode" />
        <Variable x:TypeArguments="x:String" Name="Result" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Build HTTP Request" sap:VirtualizedContainerService.HintSize="572,651.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="Payload" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[in_UseOAuthFlow]" DisplayName="If Use OAuth Flow" sap:VirtualizedContainerService.HintSize="510,540.6666666666666" sap2010:WorkflowViewState.IdRef="If_3">
          <If.Then>
            <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request (Authenticate)" EnableSSLVerification="True" EndPoint="[io_Config(&quot;OrchestratorURL&quot;)+&quot;/identity_/connect/token&quot;]" sap:VirtualizedContainerService.HintSize="204,72" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="POST" Result="[Result]" StatusCode="[StatusCode]" TimeoutMS="[io_Config(&quot;HTTPRequestActivityTimeout&quot;)]">
              <ui:HttpClient.Attachments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Attachments>
              <ui:HttpClient.Cookies>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Cookies>
              <ui:HttpClient.Headers>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Headers>
              <ui:HttpClient.Parameters>
                <InArgument x:TypeArguments="x:String" x:Key="grant_type">client_credentials</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="client_id">[in_Username]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="client_secret">[in_Password]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="scope">[io_Config("AuthenticationScope").ToString]</InArgument>
              </ui:HttpClient.Parameters>
              <ui:HttpClient.UrlSegments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.UrlSegments>
            </ui:HttpClient>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Basic Authentication" sap:VirtualizedContainerService.HintSize="476,284.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Payload]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[("{""tenancyName"":""" + io_Config("AutomationSuitetenantname") + """,""usernameOrEmailAddress"":""" + in_Username + """,""password"":""" + in_Password + """}").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[Payload]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request (Authenticate)" EnableSSLVerification="True" EndPoint="[io_Config(&quot;OrchestratorURL&quot;).Trim+&quot;/api/account/authenticate&quot;]" sap:VirtualizedContainerService.HintSize="434,72" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[Result]" StatusCode="[StatusCode]" TimeoutMS="[io_Config(&quot;HTTPRequestActivityTimeout&quot;)]">
                <ui:HttpClient.Attachments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Attachments>
                <ui:HttpClient.Cookies>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Cookies>
                <ui:HttpClient.Headers>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Headers>
                <ui:HttpClient.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Parameters>
                <ui:HttpClient.UrlSegments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.UrlSegments>
              </ui:HttpClient>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <If Condition="[StatusCode = 200]" DisplayName="If Successfully Authenticated" sap:VirtualizedContainerService.HintSize="572,25.333333333333332" sap2010:WorkflowViewState.IdRef="If_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Extract Token" sap:VirtualizedContainerService.HintSize="476,338" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="njl:JObject" Name="ResultObject" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[ResultObject]" JsonString="[Result]" />
            <If Condition="[in_UseOAuthFlow]" DisplayName="If Use OAuth Flow" sap:VirtualizedContainerService.HintSize="434,25.333333333333332" sap2010:WorkflowViewState.IdRef="If_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Assign DisplayName="Assign io_Config(&quot;Token&quot;)" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[io_Config("Token")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">[ResultObject("access_token").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign DisplayName="Assign io_Config(&quot;Token&quot;)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[io_Config("Token")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">[ResultObject("result").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <Assign DisplayName="Assign out_ShouldStop (True)" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[out_ShouldStop]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Log Failed On-Premises Authentication" sap:VirtualizedContainerService.HintSize="476,435.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message (Token not Retrieved)" sap:VirtualizedContainerService.HintSize="434,96" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[String.Format(io_Config(&quot;TokenNotRetrieved&quot;), Result)]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="[io_Config(&quot;ErrorMessageBoxTitle&quot;)]" DisplayName="Message Box (Authentication Failed)" sap:VirtualizedContainerService.HintSize="434,86.66666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[io_Config(&quot;AuthenticationFailed&quot;)]" />
            <Assign DisplayName="Assign out_ShouldStop (False)" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[out_ShouldStop]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Assign sap2010:Annotation.AnnotationText="Format Automation Suite Orchestrator URL to be used in subsequent requests." DisplayName="Assign Automation Suite Orchestrator URL" sap:VirtualizedContainerService.HintSize="634,130.66666666666666" sap2010:WorkflowViewState.IdRef="Assign_14">
      <Assign.To>
        <OutArgument x:TypeArguments="ui:GenericValue">[io_Config("OrchestratorURL")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="ui:GenericValue">[New GenericValue(String.Format("{0}/{1}/{2}", (New Uri(in_OrchestratorURL)).GetLeftPart(UriPartial.Authority).TrimEnd("/".ToCharArray), io_Config("AutomationSuiteAccountName"), io_Config("AutomationSuitetenantname")))]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
  </Sequence>
</Activity>