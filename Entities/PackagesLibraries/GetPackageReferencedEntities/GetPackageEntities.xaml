<Activity mc:Ignorable="sap sap2010" x:Class="GetPackageEntities" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sx="clr-namespace:System.Xml;assembly=System.Private.Xml" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ExtractedPackageFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="out_ReferencedEntities" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, ui:GenericValue))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>628.6666666666666,3370.6666666666665</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetPackageReferencedEntities_GetEntities_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="56">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="74">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Get entities referred in workflows of a Package." DisplayName="Get Package Entities" sap:VirtualizedContainerService.HintSize="638.6666666666666,3306" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="WorkflowsPaths" />
      <Variable x:TypeArguments="x:Int32" Name="WorkflowIndex" />
      <Variable x:TypeArguments="sd:DataTable" Name="PackageConfigFileDefinedAssets" />
      <Variable x:TypeArguments="sd:DataTable" Name="PackageConfigFileDefinedSettings" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable DataTable="[out_ReferencedEntities]" DisplayName="Build Data Table out_EntitiesUsed (Initialization)" sap:VirtualizedContainerService.HintSize="576.6666666666666,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;EntityType&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;WorkflowName&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ActivityHierarchy&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ActivityName&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;OrchestratorFolderPath&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ReferencedEntity&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetEntitiesFromPackageConfigFile Workflow" sap:VirtualizedContainerService.HintSize="576.6666666666666,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/GetPackageReferencedEntities/GetEntitiesFromPackageConfigFile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExtractedPackageFolderPath">[in_ExtractedPackageFolderPath]</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_ConfigFileAssets">[PackageConfigFileDefinedAssets]</OutArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_ConfigFileSettings">[PackageConfigFileDefinedSettings]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Assign WorkflowsPaths" sap:VirtualizedContainerService.HintSize="576.6666666666666,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_21">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[WorkflowsPaths]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(in_ExtractedPackageFolderPath, "*.xaml", SearchOption.AllDirectories)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[WorkflowIndex]" DisplayName="For Each Workflow File" sap:VirtualizedContainerService.HintSize="576.6666666666666,2806" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[WorkflowsPaths]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="WorkflowPath" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Get Workflow Referenced Entities" sap:VirtualizedContainerService.HintSize="540,2676.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="WorkflowContents" />
              <Variable x:TypeArguments="sx:XmlNamespaceManager" Name="WorkflowNamespaceManager" />
              <Variable x:TypeArguments="sx:XmlDocument" Name="WorkflowXMLDocument" />
              <Variable x:TypeArguments="x:String" Name="XPathExpression" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadTextFile File="{x:Null}" Content="[WorkflowContents]" DisplayName="Read Workflow File" FileName="[WorkflowPath]" sap:VirtualizedContainerService.HintSize="478,82" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ParseXAML Workflow" sap:VirtualizedContainerService.HintSize="478,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/GetPackageReferencedEntities/ParseXAML.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <OutArgument x:TypeArguments="sx:XmlNamespaceManager" x:Key="out_NamespaceManager">[WorkflowNamespaceManager]</OutArgument>
                <OutArgument x:TypeArguments="sx:XmlDocument" x:Key="out_XMLDocument">[WorkflowXMLDocument]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_XAMLContents">[WorkflowContents]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Sequence DisplayName="Prepare Search XPath Expression" sap:VirtualizedContainerService.HintSize="478,80" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:String[]" Name="AssetRelatedElementsNames" />
                <Variable x:TypeArguments="s:String[]" Name="QueueRelatedElementsNames" />
                <Variable x:TypeArguments="s:String[]" Name="ElementsToSearch" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign AssetRelatedElementsNames" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_22">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[AssetRelatedElementsNames]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[in_Config("AssetsReferringElements").ToString.Split({",", ", "}, StringSplitOptions.RemoveEmptyEntries)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign QueueRelatedElementsNames" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_23">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[QueueRelatedElementsNames]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[in_Config("QueuesReferringElements").ToString.Split({",", ", "}, StringSplitOptions.RemoveEmptyEntries)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Search for activities that refer to Assets and Queues." DisplayName="Assign ElementsToSearch" sap:VirtualizedContainerService.HintSize="262,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_13">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[ElementsToSearch]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[AssetRelatedElementsNames.Concat(QueueRelatedElementsNames).ToArray]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Search expression format:&#xA;//*[name() = 'ui:Activity1' or name() = 'ui:Activity2']" DisplayName="Assign XPathExpression" sap:VirtualizedContainerService.HintSize="262,124" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[XPathExpression]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[String.Format("//*[{0}]", String.Join(" or ", ElementsToSearch.Select(Function(Elem) "name() = '"+Elem+"'")))]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
            </Sequence>
            <ui:ForEach x:TypeArguments="sx:XmlNode" CurrentIndex="{x:Null}" DisplayName="For Each Entity Referring Activity Node" sap:VirtualizedContainerService.HintSize="478,2034" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[WorkflowXMLDocument.DocumentElement.SelectNodes(XPathExpression, WorkflowNamespaceManager)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="sx:XmlNode">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="EntityReferingActivityNode" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:Annotation.AnnotationText="Get referenced Orchestrator Folder Paths and entities, depending on the type of activity." DisplayName="Body" sap:VirtualizedContainerService.HintSize="441.3333333333333,1904.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="EntityType" />
                      <Variable x:TypeArguments="x:String" Name="ActivityHierarchy" />
                      <Variable x:TypeArguments="x:String" Name="ActivityName" />
                      <Variable x:TypeArguments="x:String" Name="ReferencedOrchestratorFolderPath" />
                      <Variable x:TypeArguments="x:String" Name="ReferencedEntityName" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If sap2010:Annotation.AnnotationText="AssetName is an attribute of the following activities:&#xA;- Get Asset&#xA;- Set Asset&#xA;- Get Credential" Condition="[EntityReferingActivityNode.Attributes(&quot;AssetName&quot;) IsNot Nothing]" DisplayName="If Asset Name Is Defined" sap:VirtualizedContainerService.HintSize="379.3333333333333,120.66666666666667" sap2010:WorkflowViewState.IdRef="If_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Get Referenced Asset Name (Regular Asset)" sap:VirtualizedContainerService.HintSize="400,277.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign ReferencedEntityName (AssetName)" sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_8">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[ReferencedEntityName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[EntityReferingActivityNode.Attributes("AssetName").Value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign EntityType (Regular Asset)" sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_14">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[EntityType]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">asset</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                    </If>
                    <If sap2010:Annotation.AnnotationText="Although the Get Credential activity uses AssetName to defined the name of the credential Asset, the Set Credential activity uses CredentialName." Condition="[EntityReferingActivityNode.Attributes(&quot;CredentialName&quot;) IsNot Nothing]" DisplayName="If Credential Name Is Defined" sap:VirtualizedContainerService.HintSize="379.3333333333333,137.33333333333334" sap2010:WorkflowViewState.IdRef="If_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Get Referenced Asset Name (Credential Asset)" sap:VirtualizedContainerService.HintSize="400,277.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign ReferencedEntityName (CredentialName)" sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[ReferencedEntityName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[EntityReferingActivityNode.Attributes("CredentialName").Value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign EntityType (Credential Asset)" sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[EntityType]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">asset</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                    </If>
                    <If sap2010:Annotation.AnnotationText="QueueName is an attribute of the following activities:&#xA;- Bulk Add Queue Items&#xA;- Wait Queue Item" Condition="[EntityReferingActivityNode.Attributes(&quot;QueueName&quot;) IsNot Nothing]" DisplayName="If Queue Name Is Defined" sap:VirtualizedContainerService.HintSize="379.3333333333333,104" sap2010:WorkflowViewState.IdRef="If_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Get Referenced Queue Name (Activities using QueueName)" sap:VirtualizedContainerService.HintSize="400,277.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign ReferencedEntityName (Activities using QueueName)" sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[ReferencedEntityName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[EntityReferingActivityNode.Attributes("QueueName").Value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign EntityType (Activities using QueueName)" sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_17">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[EntityType]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">queue</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                    </If>
                    <If sap2010:Annotation.AnnotationText="QueueType is an attribute of the following activities:&#xA;- Add Queue Item&#xA;- Add Transaction Item&#xA;- Get Queue Items&#xA;- Get Transaction Items" Condition="[EntityReferingActivityNode.Attributes(&quot;QueueType&quot;) IsNot Nothing]" DisplayName="If Queue Type Is Defined" sap:VirtualizedContainerService.HintSize="379.3333333333333,137.33333333333334" sap2010:WorkflowViewState.IdRef="If_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Get Referenced Queue Name (Activities using QueueType)" sap:VirtualizedContainerService.HintSize="411.3333333333333,277.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign ReferencedEntityName (Activities using QueueType)" sap:VirtualizedContainerService.HintSize="349.3333333333333,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_18">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[ReferencedEntityName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[EntityReferingActivityNode.Attributes("QueueType").Value]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign EntityType (Activities using QueueType)" sap:VirtualizedContainerService.HintSize="349.3333333333333,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_19">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[EntityType]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">queue</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                    </If>
                    <If sap2010:Annotation.AnnotationText="References to entities can be specified as a string literal (i.e., the entity name) or as a variable.&#xA;If it is a variable, the value is surrounded by square brackets (e.g., [AssetVariable]), which are removed in this step for better readability.&#xA;If it is a string literal that starts with square brackets, its name is preceeded with the character % (e.g., %[AssetName123).&#xA;&#xA;In the case of variables and if the Package has a Config.xlsx file, look in it for the actual name of the referenced entity." Condition="[ReferencedEntityName.StartsWith(&quot;[&quot;)]" DisplayName="If Entity Reference Is a Variable" sap:VirtualizedContainerService.HintSize="379.3333333333333,354" sap2010:WorkflowViewState.IdRef="If_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetVariableReferenceValue Workflow" sap:VirtualizedContainerService.HintSize="379.3333333333333,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/GetPackageReferencedEntities/GetVariableReferenceValue.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_PackageConfigFileDefinedAssets">[PackageConfigFileDefinedAssets]</InArgument>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_PackageConfigFileDefinedSettings">[PackageConfigFileDefinedSettings]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_EntityType">[EntityType]</InArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="io_ReferencedEntityName">[ReferencedEntityName]</InOutArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </If.Then>
                    </If>
                    <If sap2010:Annotation.AnnotationText="Older versions of activities do not have the Orchestrator Folder Path property." Condition="[EntityReferingActivityNode.Attributes(&quot;FolderPath&quot;) IsNot Nothing]" DisplayName="If Orchestrator Folder Path is Defined" sap:VirtualizedContainerService.HintSize="379.3333333333333,87.33333333333333" sap2010:WorkflowViewState.IdRef="If_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign DisplayName="Assign ReferencedOrchestratorFolderPath" sap:VirtualizedContainerService.HintSize="262,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ReferencedOrchestratorFolderPath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[EntityReferingActivityNode.Attributes("FolderPath").Value]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Assign DisplayName="Assign ReferencedOrchestratorFolderPath (Undefined)" sap:VirtualizedContainerService.HintSize="262,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ReferencedOrchestratorFolderPath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <If Condition="[ReferencedOrchestratorFolderPath.StartsWith(&quot;[&quot;)]" DisplayName="If Orchestrator Folder Path Is a Variable" sap:VirtualizedContainerService.HintSize="379.3333333333333,25.333333333333332" sap2010:WorkflowViewState.IdRef="If_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign DisplayName="Assign ReferencedOrchestratorFolderPath (Variable)" sap:VirtualizedContainerService.HintSize="262,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ReferencedOrchestratorFolderPath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ReferencedOrchestratorFolderPath.Trim("[]".ToCharArray)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                    </If>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Retrieves the path to the activity, considering the hierarchy of activities in the workflow." DisplayName="Invoke GetActivityHierarchy Workflow" sap:VirtualizedContainerService.HintSize="379.3333333333333,160.66666666666666" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/GetPackageReferencedEntities/GetActivityHierarchy.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sx:XmlNode" x:Key="in_ActivityNode">[EntityReferingActivityNode]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_ActivityHierarchy">[ActivityHierarchy]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <If sap2010:Annotation.AnnotationText="Retrieve the activity's display name, if it is defined." Condition="[EntityReferingActivityNode.Attributes(&quot;DisplayName&quot;) Is Nothing]" DisplayName="If Activity Has DisplayName" sap:VirtualizedContainerService.HintSize="379.3333333333333,70.66666666666667" sap2010:WorkflowViewState.IdRef="If_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign DisplayName="Assign ActivityName(XML Element's Local Name)" sap:VirtualizedContainerService.HintSize="262,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ActivityName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[EntityReferingActivityNode.LocalName]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Assign DisplayName="Assign ActivityName (Display Name)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ActivityName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[EntityReferingActivityNode.Attributes("DisplayName").Value]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{EntityType, Path.GetFileName(WorkflowPath), ActivityHierarchy, ActivityName, ReferencedOrchestratorFolderPath, ReferencedEntityName}]" DataTable="[out_ReferencedEntities]" DisplayName="Add Data Row (Add Referenced Asset)" sap:VirtualizedContainerService.HintSize="379.3333333333333,191.33333333333334" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <ui:LogMessage DisplayName="Log Message (Progress Status)" sap:VirtualizedContainerService.HintSize="458,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[String.Format(in_Config(&quot;ProgressStatus&quot;), WorkflowIndex+1, WorkflowsPaths.Length.ToString)]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>