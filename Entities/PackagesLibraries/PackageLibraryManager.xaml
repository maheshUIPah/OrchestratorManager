<Activity mc:Ignorable="sap sap2010" x:Class="PackageManager" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, ui:GenericValue))" />
    <x:Property Name="in_Entity" Type="InArgument(x:String)" />
    <x:Property Name="in_PackageLibraryOperation" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1410.4,17320</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CreateMachine_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="37">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Converters</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json.Serialization</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Web</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="92">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Decide what operation should be performed on Packages or Libraries.&#xA;Since Packages and Libraries have the same fields, their operations are implemented with the same workflow.&#xA;The main differences are related to the entity workbook (Packages and Libraries have separate workbooks) and to the API endpoint." DisplayName="Package/Library Manager" sap:VirtualizedContainerService.HintSize="771.2,17255.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="OpenWorkbook" />
      <Variable x:TypeArguments="x:String" Name="Entity" />
      <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="DuplicateEntitiesMessage" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="DuplicatePackageLibraryList" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Switch x:TypeArguments="x:String" DisplayName="Switch Entity" Expression="[in_Entity.ToLowerInvariant]" sap:VirtualizedContainerService.HintSize="708.8,556.8" sap2010:WorkflowViewState.IdRef="Switch`1_3">
      <Switch.Default>
        <ui:LogMessage DisplayName="Log Message (Unsupported Entity)" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Warn" Message="[in_Config(&quot;UnsupportedEntity&quot;)]" />
      </Switch.Default>
      <Assign x:Key="package" DisplayName="Assign Entity (Package)" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Entity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">Package</InArgument>
        </Assign.Value>
      </Assign>
      <Assign x:Key="library" DisplayName="Assign Entity (Library)" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Entity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">Library</InArgument>
        </Assign.Value>
      </Assign>
    </Switch>
    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope (Package/Library Manager)" sap:VirtualizedContainerService.HintSize="708.8,125.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" InstanceCachePeriod="3000" Workbook="[OpenWorkbook]" WorkbookPath="[String.Format(&quot;{0}\{1}&quot;, in_Config(&quot;EntitiesWorkbooksFolderPath&quot;), in_Config(Entity+&quot;ConfigFilePath&quot;))]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Switch x:TypeArguments="x:String" DisplayName="Switch (Package/Library Operation)" Expression="[in_PackageLibraryOperation.ToLowerInvariant]" sap:VirtualizedContainerService.HintSize="708.8,16320.8" sap2010:WorkflowViewState.IdRef="Switch`1_2">
      <Switch.Default>
        <Sequence DisplayName="Unsupported Operation" sap:VirtualizedContainerService.HintSize="376,285.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message (Unsupported Operation)" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[in_Config(&quot;UnsupportedOperation&quot;)]" />
          <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="[in_Config(&quot;ErrorMessageBoxTitle&quot;)]" DisplayName="Message Box (Unsupported Operation)" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[in_Config(&quot;UnsupportedOperation&quot;)]" />
        </Sequence>
      </Switch.Default>
      <Sequence x:Key="get" sap2010:Annotation.AnnotationText="It is not necessary to check for numerous requests since the Get operation only does a constant number of requests." DisplayName="Get" sap:VirtualizedContainerService.HintSize="592,2884.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message (Get)" sap:VirtualizedContainerService.HintSize="529.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[String.Format(&quot;{0}: {1} - {2}: {3}&quot;, in_Config(&quot;FormEntityLabel&quot;), in_Config(&quot;Form&quot;+Entity+&quot;Option&quot;), in_Config(&quot;FormOperationLabel&quot;), in_Config(&quot;GetOperationName&quot;))]" />
        <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" sap2010:Annotation.AnnotationText="Clear previously written Package/Library data and write new data about Packages/Libraries." CreateNewFile="False" DisplayName="Excel Application Scope (Get Packages/Libraries)" ExistingWorkbook="[OpenWorkbook]" sap:VirtualizedContainerService.HintSize="529.6,2596" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" InstanceCachePeriod="3000" Visible="False">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,2455.2" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="PreviousPackagesLibraries" />
                  <Variable x:TypeArguments="sd:DataTable" Name="PackagesLibrariesData" />
                  <Variable x:TypeArguments="sd:DataTable" Name="OUFoldersData" />
                  <Variable x:TypeArguments="x:Boolean" Name="CanHaveFolderPackages" />
                  <Variable x:TypeArguments="x:Boolean" Name="AllFoldersAccessed" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[PreviousPackagesLibraries]" DisplayName="Read Range (Previously Listed Packages/Libraries)" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" SheetName="[in_Config(&quot;GetOperationName&quot;)]">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
                <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="Math.Max() prevents clearing the header of the table." Cell="[&quot;A2:Z&quot;+Math.Max(1+PreviousPackagesLibraries.Rows.Count, 2).ToString]" DisplayName="Write Cell (Clear Previously Listed Packages/Libraries)" sap:VirtualizedContainerService.HintSize="433.6,119.2" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[in_Config(&quot;GetOperationName&quot;)]">
                  <ui:ExcelWriteCell.Text>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelWriteCell.Text>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelWriteCell>
                <Assign DisplayName="Assign Can Have Folder Package" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_26">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[CanHaveFolderPackages]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">[Entity = "Package" AndAlso (in_Config("OrchestratorType") = "cloud" OrElse in_Config("OnPremisesOrchestratorVersion") &gt;= 202010)]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[CanHaveFolderPackages]" DisplayName="If Folder Packages Feature is Available" sap:VirtualizedContainerService.HintSize="433.6,296.8" sap2010:WorkflowViewState.IdRef="If_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke PromptUserForOUFolders Workflow (Get Package)" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Common/PromptUserForOUFolders.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_SelectedOUFolders">[OUFoldersData]</OutArgument>
                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_UseTenantOption">True</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Make request after clearing sheet to prevent users from using old data." DisplayName="Invoke GetPackagesLibrariesData Workflow (Get Packages/Libraries)" sap:VirtualizedContainerService.HintSize="433.6,157.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/GetPackagesLibrariesData.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                    <InArgument x:TypeArguments="s:String[]" x:Key="in_FilterNames">[New String(){}]</InArgument>
                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_PackagesLibrariesData">[PackagesLibrariesData]</OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Entity">[Entity]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_OUFoldersData">[OUFoldersData]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_CanHaveFolderPackages">[CanHaveFolderPackages]</InArgument>
                    <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AllFoldersAccessed">[AllFoldersAccessed]</OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_DuplicateEntitiesMessage">[DuplicateEntitiesMessage]</OutArgument>
                    <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_DuplicatePackageLibraryVersionsList" />
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dict_FolderFeedID" />
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <If Condition="[in_Entity.ToLowerInvariant=&quot;library&quot;]" DisplayName="If Enitity is Library" sap:VirtualizedContainerService.HintSize="433.6,435.2" sap2010:WorkflowViewState.IdRef="If_29">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="376.8,252" sap2010:WorkflowViewState.IdRef="Sequence_58">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:FilterDataTable DataTable="[PackagesLibrariesData]" DisplayName="Filter Output Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="333.6,162.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[PackagesLibrariesData]" SelectColumnsMode="Keep">
                        <ui:FilterDataTable.Filters>
                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                            <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                          </scg:List>
                        </ui:FilterDataTable.Filters>
                        <ui:FilterDataTable.SelectColumns>
                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                            <InArgument x:TypeArguments="x:String">["Name"]</InArgument>
                            <InArgument x:TypeArguments="x:String">["Version"]</InArgument>
                            <InArgument x:TypeArguments="x:String">["Key"]</InArgument>
                            <InArgument x:TypeArguments="x:String">["Published"]</InArgument>
                          </scg:List>
                        </ui:FilterDataTable.SelectColumns>
                      </ui:FilterDataTable>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_59" />
                  </If.Else>
                </If>
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[PackagesLibrariesData]" DisplayName="Write Range (Packages/Libraries Details)" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[in_Config(&quot;GetOperationName&quot;)]" StartingCell="A2" />
                <If sap2010:Annotation.AnnotationText="Even if a user is able to see all OUs/Folders, they might not be a member of some OUs/Folders and thus not be able to access restricted resources.&#xA;Access failures are logged by GetPackagesLibrariesData.xaml, but a message box is also displayed in this case." Condition="[Not AllFoldersAccessed]" DisplayName="If Successfully Accessed Folders (Get Packages)" sap:VirtualizedContainerService.HintSize="433.6,360.8" sap2010:WorkflowViewState.IdRef="If_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="[in_Config(&quot;WarningMessageBoxTitle&quot;)]" DisplayName="Message Box (Could not Access All OU/Folders - Get Packages)" sap:VirtualizedContainerService.HintSize="333.6,85.6" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[in_Config(&quot;FailedToAccessOUFolder&quot;)]" />
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <If sap2010:Annotation.AnnotationText="A bug has been encountered in Orchestrator which allows the duplication of certain library versions. This is an unexpected behavior and creates further errors when encountered, so these entities are skipped from processing&#xA;A log message is also displayed by GetPackagesLibrariesData.xaml in this case&#xA;Such a behavior was not and is not expected to be encountered for packages but the possibility was handled for this entity as well, anyway." Condition="[Not String.IsNullOrWhiteSpace(DuplicateEntitiesMessage)]" DisplayName="If Any Duplicated Libraries" sap:VirtualizedContainerService.HintSize="433.6,424.8" sap2010:WorkflowViewState.IdRef="If_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="[in_Config(&quot;WarningMessageBoxTitle&quot;)]" DisplayName="Message Box (Duplicated Library/Package)" sap:VirtualizedContainerService.HintSize="333.6,85.6" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[DuplicateEntitiesMessage]" />
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_21">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
      </Sequence>
      <Sequence x:Key="delete" DisplayName="Delete " sap:VirtualizedContainerService.HintSize="646.4,3620" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="PackagesLibrariesDetails" />
          <Variable x:TypeArguments="sd:DataTable" Name="PackagesLibrariesData" />
          <Variable x:TypeArguments="sd:DataRow[]" Name="UnprocessedPackagesLibrariesDetails" />
          <Variable x:TypeArguments="x:Boolean" Name="CanHaveFolderPackages" />
          <Variable x:TypeArguments="sd:DataTable" Name="OUFoldersData" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="584,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[String.Format(&quot;{0}: {1} - {2}: {3}&quot;, in_Config(&quot;FormEntityLabel&quot;), in_Config(&quot;Form&quot;+Entity+&quot;Option&quot;), in_Config(&quot;FormOperationLabel&quot;), in_Config(&quot;DeleteOperationName&quot;))]" />
        <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope (Delete Package/Library)" ExistingWorkbook="[OpenWorkbook]" sap:VirtualizedContainerService.HintSize="584,1844.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Visible="False">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence sap2010:Annotation.AnnotationText="The names of the original columns from the sheet depend on the used language, so rename them according to the same names used by the Get operation for easier understanding and manipulation by column name instead of column index." DisplayName="Get Data and Rename Columns (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="550.4,1735.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[PackagesLibrariesDetails]" DisplayName="Read Range (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="488,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" SheetName="[in_Config(&quot;DeleteOperationName&quot;)]" UseFilter="True">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
                <If Condition="[in_Entity.ToLowerInvariant=&quot;library&quot;]" DisplayName="If Entity Is Library" sap:VirtualizedContainerService.HintSize="488,738.4" sap2010:WorkflowViewState.IdRef="If_27">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="454.4,555.2" sap2010:WorkflowViewState.IdRef="Sequence_49">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="411.2,465.6" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[{&quot;FeedId&quot;,&quot;FolderName&quot;}]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="377.6,277.6" sap2010:WorkflowViewState.IdRef="Sequence_53">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[currentText]" DataTable="[PackagesLibrariesDetails]" DisplayName="Add Demo Column" sap:VirtualizedContainerService.HintSize="334.4,188" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:AddDataColumn>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_50">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <Assign DisplayName="Assign Name Column (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="488,80.8" sap2010:WorkflowViewState.IdRef="Assign_55">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(0).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Name</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Version Column (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="488,80.8" sap2010:WorkflowViewState.IdRef="Assign_56">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(1).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Version</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Key Column (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="488,80.8" sap2010:WorkflowViewState.IdRef="Assign_57">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(2).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Key</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Feed ID Column (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="488,80.8" sap2010:WorkflowViewState.IdRef="Assign_58">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(3).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Folder Feed-ID</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Folder/Tenant Name Column (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="488,80.8" sap2010:WorkflowViewState.IdRef="Assign_59">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(4).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Folder/Tenant Name</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Result Column (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="488,80.8" sap2010:WorkflowViewState.IdRef="Assign_60">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(5).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Result</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <Assign sap2010:Annotation.AnnotationText="Select only rows that do not have a value in the Result column, but have at least a value in any other column." DisplayName="Assign UnprocessedPackagesLibrariesDetails (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="584,124.8" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataRow[]">[UnprocessedPackagesLibrariesDetails]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataRow[]">[PackagesLibrariesDetails.AsEnumerable().Where(Function(Row) String.IsNullOrWhiteSpace(Row("Result").ToString) AndAlso Row.ItemArray.Any(Function(RowField) Not String.IsNullOrWhiteSpace(RowField.ToString))).ToArray()]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ConfirmNumerousRequests Workflow (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="584,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Common/ConfirmNumerousRequests.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_PlannedNumberOfRequests">[UnprocessedPackagesLibrariesDetails.Count()]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <Assign DisplayName="Assign Can Have Folder Package?" sap:VirtualizedContainerService.HintSize="584,80.8" sap2010:WorkflowViewState.IdRef="Assign_29">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[CanHaveFolderPackages]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">[Entity = "Package" AndAlso (in_Config("OrchestratorType") = "cloud" OrElse in_Config("OnPremisesOrchestratorVersion") &gt;= 202010)]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[CanHaveFolderPackages]" DisplayName="If Folder Packages Feature is Available" sap:VirtualizedContainerService.HintSize="584,296.8" sap2010:WorkflowViewState.IdRef="If_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Entities\PackagesLibraries\PackageLibraryFolderData.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Entities\PackagesLibraries\PackageLibraryFolderData.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_SelectedOUFolders">[OUFoldersData]</OutArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_UseTenantOption">True</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_24">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
        <If Condition="[UnprocessedPackagesLibrariesDetails.Count() &gt; 0]" DisplayName="If There are Rows to Process (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="584,372.8" sap2010:WorkflowViewState.IdRef="If_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get current data beforehand for confirmation purposes and to reduce the number of requests.&#xA;&#xA;Consider only Packages/Libraries specified in the sheet." DisplayName="Invoke GetPackagesLibrariesData Workflow (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="333.6,189.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/GetPackagesLibrariesData.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                <InArgument x:TypeArguments="s:String[]" x:Key="in_FilterNames">[UnprocessedPackagesLibrariesDetails.Where(Function(Row) Not String.IsNullOrWhiteSpace(Row("Name").ToString)).Select(Function(Row) Row("Name").ToString).Distinct().ToArray()]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_PackagesLibrariesData">[PackagesLibrariesData]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Entity">[Entity]</InArgument>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_OUFoldersData">[OUFoldersData]</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_CanHaveFolderPackages">[CanHaveFolderPackages]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AllFoldersAccessed" />
                <OutArgument x:TypeArguments="x:String" x:Key="out_DuplicateEntitiesMessage">[DuplicateEntitiesMessage]</OutArgument>
                <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_DuplicatePackageLibraryVersionsList">[DuplicatePackageLibraryList]</OutArgument>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dict_FolderFeedID" />
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_30" />
          </If.Else>
        </If>
        <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each Row (Delete Package/Library)" sap:VirtualizedContainerService.HintSize="584,301.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[UnprocessedPackagesLibrariesDetails]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="PackageLibraryDetails" />
              </ActivityAction.Argument>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DeletePackageLibrary Workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/DeletePackageLibrary.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:WorkbookApplication" x:Key="in_OpenWorkbook">[OpenWorkbook]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Name">[PackageLibraryDetails("Name").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Key">[PackageLibraryDetails("Key").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Version">[PackageLibraryDetails("Version").ToString]</InArgument>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_PackagesLibrariesData">[PackagesLibrariesData]</InOutArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_PackageLibraryIndex">[PackagesLibrariesDetails.Rows.IndexOf(PackageLibraryDetails)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Entity">[Entity]</InArgument>
                  <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_DuplicatePackageLibraryList">[DuplicatePackageLibraryList]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_DuplicateEntitiesMessage">[DuplicateEntitiesMessage]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_FeedID">[PackageLibraryDetails("Folder Feed-ID").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_FolderName">[if(in_Entity.ToLowerInvariant="library","Tenant",PackageLibraryDetails("Folder/Tenant Name").ToString)]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </Sequence>
      <Sequence x:Key="downloadpackagelibrary" DisplayName="Download Package/Library" sap:VirtualizedContainerService.HintSize="668.8,5683.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="PackagesLibrariesDetails" />
          <Variable x:TypeArguments="sd:DataTable" Name="PackagesLibrariesData" />
          <Variable x:TypeArguments="sd:DataRow[]" Name="UnprocessedPackagesLibrariesDetails" />
          <Variable x:TypeArguments="x:Boolean" Name="CanHaveFolderPackages" />
          <Variable x:TypeArguments="sd:DataTable" Name="OUFoldersData" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message (Download Package/Library)" sap:VirtualizedContainerService.HintSize="606.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Trace" Message="[String.Format(&quot;{0}: {1} - {2}: {3}&quot;, in_Config(&quot;FormEntityLabel&quot;), in_Config(&quot;Form&quot;+Entity+&quot;Option&quot;), in_Config(&quot;FormOperationLabel&quot;), in_Config(&quot;DownloadPackageLibraryOperationName&quot;))]" />
        <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope (Download Package/Library)" ExistingWorkbook="[OpenWorkbook]" sap:VirtualizedContainerService.HintSize="606.4,3432" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" InstanceCachePeriod="3000" Visible="False">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence sap2010:Annotation.AnnotationText="The names of the original columns from the sheet depend on the used language, so rename them according to the same names used by the Get operation for easier understanding and manipulation by column name instead of column index." DisplayName="Get Data and Rename Columns (Download Package/Library)" sap:VirtualizedContainerService.HintSize="572.8,3282.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[PackagesLibrariesDetails]" DisplayName="Read Range (Download Package/Library)" sap:VirtualizedContainerService.HintSize="510.4,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" SheetName="[in_Config(&quot;DownloadPackageLibraryOperationName&quot;)]" UseFilter="True">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRange>
                <If Condition="[in_Entity.ToLowerInvariant=&quot;library&quot;]" DisplayName="If Entity Is Library" sap:VirtualizedContainerService.HintSize="510.4,863.2" sap2010:WorkflowViewState.IdRef="If_23">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="476.8,680" sap2010:WorkflowViewState.IdRef="Sequence_36">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="433.6,465.6" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[{&quot;FeedId&quot;,&quot;FolderName&quot;}]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="377.6,277.6" sap2010:WorkflowViewState.IdRef="Sequence_57">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[currentItem]" DataTable="[PackagesLibrariesDetails]" DisplayName="Add demo Column" sap:VirtualizedContainerService.HintSize="334.4,188" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:AddDataColumn>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                      <Assign DisplayName="Assign PackagesLibrariesDetails Re-roder" sap:VirtualizedContainerService.HintSize="433.6,84.8" sap2010:WorkflowViewState.IdRef="Assign_74">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sd:DataTable">[PackagesLibrariesDetails]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[PackagesLibrariesDetails.DefaultView.ToTable(False,
{"Name","Version","FeedId","FolderName","Download Folder Path","Downloaded Library File Path","Result"})]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_37">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <Assign DisplayName="Assign Name Column (Download Package/Library)" sap:VirtualizedContainerService.HintSize="510.4,80.8" sap2010:WorkflowViewState.IdRef="Assign_75">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(0).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Name</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Version Column (Download Package/Library)" sap:VirtualizedContainerService.HintSize="510.4,80.8" sap2010:WorkflowViewState.IdRef="Assign_76">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(1).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Version</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="" sap:VirtualizedContainerService.HintSize="510.4,80.8" sap2010:WorkflowViewState.IdRef="Assign_77">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(2).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Folder Feed-ID</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign DownloadFolderPath Column (Download Package/Library)" sap:VirtualizedContainerService.HintSize="510.4,80.8" sap2010:WorkflowViewState.IdRef="Assign_78">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(3).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Folder/Tenant Name"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign DownloadFolderPath Column (Download Package/Library)" sap:VirtualizedContainerService.HintSize="510.4,80.8" sap2010:WorkflowViewState.IdRef="Assign_79">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(4).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Download Folder Path"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign DownloadedPackageFilePath Column (Download Package/Library)" sap:VirtualizedContainerService.HintSize="510.4,80.8" sap2010:WorkflowViewState.IdRef="Assign_80">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(5).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">DownloadedPackageFilePath</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Result Column (Download Package/Library)" sap:VirtualizedContainerService.HintSize="510.4,80.8" sap2010:WorkflowViewState.IdRef="Assign_81">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(6).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Result</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[in_Config.ContainsKey(&quot;LiftAndShiftEnabled&quot;) AndAlso&#xA;  Convert.ToBoolean(in_Config(&quot;LiftAndShiftEnabled&quot;).ToString) AndAlso&#xA;  in_Entity.ToLowerInvariant.Equals(&quot;package&quot;)]" DisplayName="If LiftAndShift" sap:VirtualizedContainerService.HintSize="510.4,1261.6" sap2010:WorkflowViewState.IdRef="If_22">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="454.4,1078.4" sap2010:WorkflowViewState.IdRef="Sequence_34">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="GetSheetDetails" />
                        <Variable x:TypeArguments="sd:DataTable" Name="dtPreviousDownload" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[GetSheetDetails]" DisplayName="Read Range (Download Package/Library)" sap:VirtualizedContainerService.HintSize="411.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" SheetName="Get" UseFilter="True">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dtPreviousDownload]" DisplayName="Read Range (Download Package/Library)" sap:VirtualizedContainerService.HintSize="411.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_12" SheetName="[in_Config(&quot;DownloadPackageLibraryOperationName&quot;)]" UseFilter="True">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                      <If Condition="[dtPreviousDownload.RowCount&gt;0]" DisplayName="If Previously Listed Data Is present" sap:VirtualizedContainerService.HintSize="411.2,407.2" sap2010:WorkflowViewState.IdRef="If_30">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="377.6,224" sap2010:WorkflowViewState.IdRef="Sequence_60">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelDeleteRange DisplayName="Delete Previous data" sap:VirtualizedContainerService.HintSize="334.4,134.4" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_1" Range="[&quot;A2:Z&quot;+Math.Max(1+dtPreviousDownload.Rows.Count, 2).ToString]" SheetName="[in_Config(&quot;DownloadPackageLibraryOperationName&quot;)]" ShiftCells="False" ShiftOption="ShiftUp" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_61" />
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PackagesUpload.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="411.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="Entities\DataMigration\PackagesUpload.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_DownloadSheetDt">[PackagesLibrariesDetails]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_GetSheetDt">[GetSheetDetails]</InArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_DataToBeCopied">[PackagesLibrariesDetails]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[PackagesLibrariesDetails]" DisplayName="Write Range (Download Sheet)" sap:VirtualizedContainerService.HintSize="411.2,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[in_Config(&quot;DownloadPackageLibraryOperationName&quot;)]" StartingCell="A2" />
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[PackagesLibrariesDetails]" DisplayName="Read Range (Download Package/Library)" sap:VirtualizedContainerService.HintSize="411.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" SheetName="[in_Config(&quot;DownloadPackageLibraryOperationName&quot;)]" UseFilter="True">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_35">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <Assign sap2010:Annotation.AnnotationText="Select only rows that do not have a value in the Result column, but have at least a value in any other column." DisplayName="Assign UnprocessedPackagesLibrariesDetails (Download Package/Library)" sap:VirtualizedContainerService.HintSize="606.4,124.8" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataRow[]">[UnprocessedPackagesLibrariesDetails]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataRow[]">[PackagesLibrariesDetails.AsEnumerable().Where(Function(Row) String.IsNullOrWhiteSpace(Row("Result").ToString) AndAlso Row.ItemArray.Any(Function(RowField) Not String.IsNullOrWhiteSpace(RowField.ToString))).ToArray()]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ConfirmNumerousRequests Workflow (Download Package/Libraries)" sap:VirtualizedContainerService.HintSize="606.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Common/ConfirmNumerousRequests.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_PlannedNumberOfRequests">[UnprocessedPackagesLibrariesDetails.Count()]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <Assign DisplayName="Assign Can Have Package ?" sap:VirtualizedContainerService.HintSize="606.4,80.8" sap2010:WorkflowViewState.IdRef="Assign_27">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[CanHaveFolderPackages]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">[Entity = "Package" AndAlso (in_Config("OrchestratorType") = "cloud" OrElse in_Config("OnPremisesOrchestratorVersion") &gt;= 202010)]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[CanHaveFolderPackages]" DisplayName="If Folder Packages Feature is Available" sap:VirtualizedContainerService.HintSize="606.4,296.8" sap2010:WorkflowViewState.IdRef="If_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PackageLibraryFolderData.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="Entities\PackagesLibraries\PackageLibraryFolderData.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_SelectedOUFolders">[OUFoldersData]</OutArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_UseTenantOption">True</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
        <If Condition="[UnprocessedPackagesLibrariesDetails.Count() &gt; 0]" DisplayName="If There are Rows to Process (Download Package/Library)" sap:VirtualizedContainerService.HintSize="606.4,372.8" sap2010:WorkflowViewState.IdRef="If_17">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get current data about Packages/Libraries to share data among rows and reduce the number of requests.&#xA;&#xA;Consider only Packages/Libraries specified in the sheet." DisplayName="Invoke GetPackagesLibrariesData Workflow (Download Package/Library)" sap:VirtualizedContainerService.HintSize="333.6,189.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/GetPackagesLibrariesData.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                <InArgument x:TypeArguments="s:String[]" x:Key="in_FilterNames">[UnprocessedPackagesLibrariesDetails.Where(Function(Row) Not String.IsNullOrWhiteSpace(Row("Name").ToString)).Select(Function(Row) Row("Name").ToString).Distinct().ToArray()]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_PackagesLibrariesData">[PackagesLibrariesData]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Entity">[Entity]</InArgument>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_OUFoldersData">[OUFoldersData]</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_CanHaveFolderPackages">[CanHaveFolderPackages]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AllFoldersAccessed" />
                <OutArgument x:TypeArguments="x:String" x:Key="out_DuplicateEntitiesMessage">[DuplicateEntitiesMessage]</OutArgument>
                <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_DuplicatePackageLibraryVersionsList">[DuplicatePackageLibraryList]</OutArgument>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dict_FolderFeedID" />
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_25" />
          </If.Else>
        </If>
        <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each Row (Download Package/Library)" sap:VirtualizedContainerService.HintSize="606.4,777.6" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[UnprocessedPackagesLibrariesDetails]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="PackageLibraryDetails" />
              </ActivityAction.Argument>
              <If Condition="[in_Entity.ToLowerInvariant=&quot;library&quot;]" sap:VirtualizedContainerService.HintSize="410.4,589.6" sap2010:WorkflowViewState.IdRef="If_26">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376.8,203.2" sap2010:WorkflowViewState.IdRef="Sequence_47">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DownloadPackage Workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/DownloadPackageLibrary.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:WorkbookApplication" x:Key="in_OpenWorkbook">[OpenWorkbook]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_DownloadFolderPath">[PackageLibraryDetails("Download Folder Path").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Name">[PackageLibraryDetails("Name").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Version">[PackageLibraryDetails("Version").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_PackageLibraryIndex">[PackagesLibrariesDetails.Rows.IndexOf(PackageLibraryDetails)]</InArgument>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_PackagesLibrariesData">[PackagesLibrariesData]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Entity">[Entity]</InArgument>
                        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_DuplicatePackageLibraryList">[DuplicatePackageLibraryList]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_DuplicateEntitiesMessage">[DuplicateEntitiesMessage]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FeedID">[PackageLibraryDetails("Folder Feed-ID").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FolderName">Tenant</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376.8,203.2" sap2010:WorkflowViewState.IdRef="Sequence_48">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Entities\PackagesLibraries\DownloadPackageLibrary.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="Entities\PackagesLibraries\DownloadPackageLibrary.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:WorkbookApplication" x:Key="in_OpenWorkbook">[OpenWorkbook]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_DownloadFolderPath">[PackageLibraryDetails("Download Folder Path").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Name">[PackageLibraryDetails("Name").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Version">[PackageLibraryDetails("Version").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_PackageLibraryIndex">[PackagesLibrariesDetails.Rows.IndexOf(PackageLibraryDetails)]</InArgument>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_PackagesLibrariesData">[PackagesLibrariesData]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Entity">[Entity]</InArgument>
                        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_DuplicatePackageLibraryList">[DuplicatePackageLibraryList]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_DuplicateEntitiesMessage">[DuplicateEntitiesMessage]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FeedID">[PackageLibraryDetails("Folder Feed-ID").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FolderName">[PackageLibraryDetails("Folder/Tenant Name").ToString]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Else>
              </If>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </Sequence>
      <Sequence x:Key="uploadpackagelibrary" DisplayName="Upload Package/Library" sap:VirtualizedContainerService.HintSize="592,1453.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="PackagesLibrariesDetails" />
          <Variable x:TypeArguments="sd:DataRow[]" Name="UnprocessedPackagesLibrariesDetails" />
          <Variable x:TypeArguments="x:Boolean" Name="CanHaveFolderPackages" />
          <Variable x:TypeArguments="sd:DataTable" Name="OUFoldersData" />
          <Variable x:TypeArguments="sd:DataTable" Name="PackagesLibrariesData" />
          <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="Dict_FolderFeedID" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message (Upload Package/Library)" sap:VirtualizedContainerService.HintSize="529.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Trace" Message="[String.Format(&quot;{0}: {1} - {2}: {3}&quot;, in_Config(&quot;FormEntityLabel&quot;), in_Config(&quot;Form&quot;+Entity+&quot;Option&quot;), in_Config(&quot;FormOperationLabel&quot;), in_Config(&quot;UploadPackageLibraryOperationName&quot;))]" />
        <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope (Upload Package/Library)" ExistingWorkbook="[OpenWorkbook]" sap:VirtualizedContainerService.HintSize="529.6,24.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" InstanceCachePeriod="3000" Visible="False">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence sap2010:Annotation.AnnotationText="The names of the original columns from the sheet depend on the used language, so rename them according to the same names used by the Get operation for easier understanding and manipulation by column name instead of column index." DisplayName="Get Data and Rename Columns (Upload Package/Library)" sap:VirtualizedContainerService.HintSize="496,1180" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[PackagesLibrariesDetails]" DisplayName="Read Range (Upload Package/Library)" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" SheetName="[in_Config(&quot;UploadPackageLibraryOperationName&quot;)]" UseFilter="True">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
                <If Condition="[in_Entity.ToLowerInvariant=&quot;library&quot;]" DisplayName="If Entity Is Library" sap:VirtualizedContainerService.HintSize="433.6,543.2" sap2010:WorkflowViewState.IdRef="If_25">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="377.6,277.6" sap2010:WorkflowViewState.IdRef="Sequence_42">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="FeedId" DataTable="[PackagesLibrariesDetails]" DisplayName="Add demo Column" sap:VirtualizedContainerService.HintSize="334.4,188" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:AddDataColumn>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_43">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <Assign DisplayName="Assign PackageFilePath Column (Upload Package/Library)" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_61">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(0).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">PackageFilePath</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Folder Feed ID (Upload Package/Library)" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_62">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(1).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Folder/Tenant Name"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Result Column (Upload Package/Library)" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_63">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesLibrariesDetails.Columns(2).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Result</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <Assign sap2010:Annotation.AnnotationText="Select only rows that do not have a value in the Result column, but have at least a value in any other column." DisplayName="Assign UnprocessedPackagesLibrariesDetails (Upload Package/Library)" sap:VirtualizedContainerService.HintSize="529.6,125.6" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataRow[]">[UnprocessedPackagesLibrariesDetails]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataRow[]">[PackagesLibrariesDetails.AsEnumerable().Where(Function(Row) String.IsNullOrWhiteSpace(Row("Result").ToString) AndAlso Row.ItemArray.Any(Function(RowField) Not String.IsNullOrWhiteSpace(RowField.ToString))).ToArray()]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ConfirmNumerousRequests Workflow (Upload Package/Library)" sap:VirtualizedContainerService.HintSize="529.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Common/ConfirmNumerousRequests.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_PlannedNumberOfRequests">[UnprocessedPackagesLibrariesDetails.Count()]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <Assign DisplayName="Asign Can Have Package?" sap:VirtualizedContainerService.HintSize="529.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_31">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[CanHaveFolderPackages]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">[Entity = "Package" AndAlso (in_Config("OrchestratorType") = "cloud" OrElse in_Config("OnPremisesOrchestratorVersion") &gt;= 202010)]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[CanHaveFolderPackages]" DisplayName="If Folder Packages Feature is Available" sap:VirtualizedContainerService.HintSize="529.6,296.8" sap2010:WorkflowViewState.IdRef="If_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Entities\PackagesLibraries\PackageLibraryFolderData.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="Entities\PackagesLibraries\PackageLibraryFolderData.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_SelectedOUFolders">[OUFoldersData]</OutArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_UseTenantOption">True</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_26">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
        <If Condition="[UnprocessedPackagesLibrariesDetails.Count() &gt; 0 And in_Entity.ToLowerInvariant=&quot;package&quot;]" DisplayName="If There are Rows to Process (Download Package/Library)" sap:VirtualizedContainerService.HintSize="529.6,24.8" sap2010:WorkflowViewState.IdRef="If_20">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Entities\PackagesLibraries\GetPackagesLibrariesFolderFeedIDs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="Entities\PackagesLibraries\GetPackagesLibrariesFolderFeedIDs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                <InArgument x:TypeArguments="s:String[]" x:Key="in_FilterNames">[New String(){}]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_PackagesLibrariesData" />
                <InArgument x:TypeArguments="x:String" x:Key="in_Entity">[Entity]</InArgument>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_OUFoldersData">[OUFoldersData]</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_CanHaveFolderPackages">[CanHaveFolderPackages]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AllFoldersAccessed" />
                <OutArgument x:TypeArguments="x:String" x:Key="out_DuplicateEntitiesMessage">[DuplicateEntitiesMessage]</OutArgument>
                <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_DuplicatePackageLibraryVersionsList">[DuplicatePackageLibraryList]</OutArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_packageDataWithFeedID" />
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dict_FolderFeedID">[Dict_FolderFeedID]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_31" />
          </If.Else>
        </If>
        <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each Row (Upload Package/Library)" sap:VirtualizedContainerService.HintSize="529.6,301.6" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[UnprocessedPackagesLibrariesDetails]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="PackageDetails" />
              </ActivityAction.Argument>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UploadPackageLibrary Workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/UploadPackageLibrary.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:WorkbookApplication" x:Key="in_OpenWorkbook">[OpenWorkbook]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_UploadFilePath">[PackageDetails("PackageFilePath").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Entity">[Entity]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_PackageLibraryIndex">[PackagesLibrariesDetails.Rows.IndexOf(PackageDetails)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_UploadLevel">[PackageDetails("Folder/Tenant Name").ToString]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_FolderFeedIDs">[Dict_FolderFeedID]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </Sequence>
      <Sequence x:Key="getpackagereferencedentities" DisplayName="Get Package Referenced Entities" sap:VirtualizedContainerService.HintSize="496,1884" sap2010:WorkflowViewState.IdRef="Sequence_15">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="PackagesDetails" />
          <Variable x:TypeArguments="sd:DataTable" Name="PackagesData" />
          <Variable x:TypeArguments="sd:DataRow[]" Name="UnprocessedPackagesDetails" />
          <Variable x:TypeArguments="x:Boolean" Name="CanHaveFolderPackages" />
          <Variable x:TypeArguments="sd:DataTable" Name="OUFoldersData" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Trace" Message="[String.Format(&quot;{0}: {1} - {2}: {3}&quot;, in_Config(&quot;FormEntityLabel&quot;), in_Config(&quot;FormPackageOption&quot;), in_Config(&quot;FormOperationLabel&quot;), in_Config(&quot;GetPackageReferencedEntitiesOperationName&quot;))]" />
        <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope (Get Package Referenced Entities)" ExistingWorkbook="[OpenWorkbook]" sap:VirtualizedContainerService.HintSize="433.6,24.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" InstanceCachePeriod="3000" Visible="False">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence sap2010:Annotation.AnnotationText="The names of the original columns from the sheet depend on the used language, so rename them according to the same names used by the Get operation for easier understanding and manipulation by column name instead of column index." DisplayName="Get Data and Rename Columns (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="496,961.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[PackagesDetails]" DisplayName="Read Range (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" SheetName="[in_Config(&quot;GetPackageReferencedEntitiesOperationName&quot;)]" UseFilter="True">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
                <Assign DisplayName="Assign Name Column (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesDetails.Columns(0).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Name</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Version Column (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_23">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesDetails.Columns(1).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Version</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Folder Feed ID Column (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_34">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesDetails.Columns(2).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Folder Feed ID</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Folder Feed ID Column (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_54">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesDetails.Columns(3).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Folder/Tenant Name</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign PackageReferencedEntitiesFilePath (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesDetails.Columns(4).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">PackageReferencedEntitiesFilePath</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Result (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PackagesDetails.Columns(5).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Result</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <Assign sap2010:Annotation.AnnotationText="Select only rows that do not have a value in the Result column, but have at least a value in any other column." DisplayName="Assign UnprocessedPackagesDetails (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,125.6" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataRow[]">[UnprocessedPackagesDetails]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataRow[]">[PackagesDetails.AsEnumerable().Where(Function(Row) String.IsNullOrWhiteSpace(Row("Result").ToString) AndAlso Row.ItemArray.Any(Function(RowField) Not String.IsNullOrWhiteSpace(RowField.ToString))).ToArray()]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ConfirmNumerousRequests Workflow (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Common/ConfirmNumerousRequests.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_PlannedNumberOfRequests">[UnprocessedPackagesDetails.Count()]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <Assign DisplayName="Assign :Can have folder access" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_33">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[CanHaveFolderPackages]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">[Entity = "Package" AndAlso (in_Config("OrchestratorType") = "cloud" OrElse in_Config("OnPremisesOrchestratorVersion") &gt;= 202010)]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[CanHaveFolderPackages]" DisplayName="If Folder Packages Feature is Available" sap:VirtualizedContainerService.HintSize="433.6,379.2" sap2010:WorkflowViewState.IdRef="If_21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke PromptUserForOUFolders Workflow (Get Package)" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="Common/PromptUserForOUFolders.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_SelectedOUFolders">[OUFoldersData]</OutArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_UseTenantOption">True</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_33">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
        <If Condition="[UnprocessedPackagesDetails.Count() &gt; 0]" DisplayName="If There are Rows to Process (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,372.8" sap2010:WorkflowViewState.IdRef="If_11">
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get current data about Packages to share data among rows and reduce the number of requests.&#xA;&#xA;Consider only Packages specified in the sheet." DisplayName="Invoke GetPackagesData Workflow (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="333.6,189.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Entities/PackagesLibraries/GetPackagesLibrariesData.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                <InArgument x:TypeArguments="s:String[]" x:Key="in_FilterNames">[UnprocessedPackagesDetails.Where(Function(Row) Not String.IsNullOrWhiteSpace(Row("Name").ToString)).Select(Function(Row) Row("Name").ToString).Distinct().ToArray()]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_PackagesLibrariesData">[PackagesData]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Entity">Package</InArgument>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_OUFoldersData">[OUFoldersData]</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_CanHaveFolderPackages">[CanHaveFolderPackages]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AllFoldersAccessed" />
                <OutArgument x:TypeArguments="x:String" x:Key="out_DuplicateEntitiesMessage">[DuplicateEntitiesMessage]</OutArgument>
                <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_DuplicatePackageLibraryVersionsList">[DuplicatePackageLibraryList]</OutArgument>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dict_FolderFeedID" />
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_29" />
          </If.Else>
        </If>
        <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each Row (Get Package Referenced Entities)" sap:VirtualizedContainerService.HintSize="433.6,301.6" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[UnprocessedPackagesDetails]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="PackageDetails" />
              </ActivityAction.Argument>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetPackageReferencedEntities Workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Entities\PackagesLibraries\GetPackageReferenceEntities.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:WorkbookApplication" x:Key="in_OpenWorkbook">[OpenWorkbook]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Name">[PackageDetails("Name").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Version">[PackageDetails("Version").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_PackageIndex">[PackagesDetails.Rows.IndexOf(PackageDetails)]</InArgument>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_PackagesData">[PackagesData]</InArgument>
                  <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_DuplicatePackageLibraryList">[DuplicatePackageLibraryList]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_DuplicateEntitiesMessage">[DuplicateEntitiesMessage]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_FeedID">[PackageDetails("Folder Feed ID").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_FolderName">[if(in_Entity.ToLowerInvariant="library","Tenant",PackageDetails("Folder/Tenant Name").ToString)]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </Sequence>
    </Switch>
  </Sequence>
</Activity>